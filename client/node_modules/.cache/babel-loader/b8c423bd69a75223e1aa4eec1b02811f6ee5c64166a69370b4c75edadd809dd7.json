{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Axios instance oluştur\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor - token ekle\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor - hata yönetimi\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getMe: () => api.get('/auth/me'),\n  changePassword: passwords => api.put('/auth/change-password', passwords)\n};\n\n// Documents API\nexport const documentsAPI = {\n  upload: file => {\n    const formData = new FormData();\n    formData.append('document', file);\n    return api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  getAll: (params = {}) => api.get('/documents', {\n    params\n  }),\n  getById: id => api.get(`/documents/${id}`),\n  search: (query, params = {}) => api.get('/documents/search', {\n    params: {\n      query,\n      ...params\n    }\n  }),\n  getSummary: id => api.post(`/documents/${id}/summary`),\n  searchInDocument: (id, query) => api.post(`/documents/${id}/search`, {\n    query\n  }),\n  getKeywords: id => api.post(`/documents/${id}/keywords`),\n  delete: id => api.delete(`/documents/${id}`)\n};\n\n// Admin API\nexport const adminAPI = {\n  getUsers: params => api.get('/admin/users', {\n    params\n  }),\n  deleteUser: id => api.delete(`/admin/users/${id}`),\n  getStats: () => api.get('/admin/stats')\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getMe","get","changePassword","passwords","put","documentsAPI","upload","file","formData","FormData","append","getAll","params","getById","id","search","query","getSummary","searchInDocument","getKeywords","delete","adminAPI","getUsers","deleteUser","getStats","healthAPI","check"],"sources":["C:/Users/erayd/Desktop/Yeni klasör/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Axios instance oluştur\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor - token ekle\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor - hata yönetimi\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getMe: () => api.get('/auth/me'),\r\n  changePassword: (passwords) => api.put('/auth/change-password', passwords),\r\n};\r\n\r\n// Documents API\r\nexport const documentsAPI = {\r\n  upload: (file) => {\r\n    const formData = new FormData();\r\n    formData.append('document', file);\r\n    return api.post('/documents/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  getAll: (params = {}) => api.get('/documents', { params }),\r\n  \r\n  getById: (id) => api.get(`/documents/${id}`),\r\n  \r\n  search: (query, params = {}) => \r\n    api.get('/documents/search', { \r\n      params: { query, ...params } \r\n    }),\r\n  \r\n  getSummary: (id) => api.post(`/documents/${id}/summary`),\r\n  \r\n  searchInDocument: (id, query) => api.post(`/documents/${id}/search`, { query }),\r\n  \r\n  getKeywords: (id) => api.post(`/documents/${id}/keywords`),\r\n  \r\n  delete: (id) => api.delete(`/documents/${id}`),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  getUsers: (params) => api.get('/admin/users', { params }),\r\n  deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n  getStats: () => api.get('/admin/stats'),\r\n};\r\n\r\n// Health check\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}