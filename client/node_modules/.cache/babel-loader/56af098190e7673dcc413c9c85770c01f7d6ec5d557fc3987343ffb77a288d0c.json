{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erayd\\\\Desktop\\\\Yeni klas\\xF6r\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport LoadingSpinner from './components/common/LoadingSpinner';\n\n// Protected Route bileşeni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 39\n  }, this);\n};\n\n// Public Route bileşeni (giriş yapmış kullanıcıları dashboard'a yönlendir)\n_s(ProtectedRoute, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst PublicRoute = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 28\n  }, this) : children;\n};\n\n// Ana uygulama içeriği\n_s2(PublicRoute, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c2 = PublicRoute;\nconst AppContent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard/*\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// Ana App bileşeni\n_c3 = AppContent;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");\n$RefreshReg$(_c3, \"AppContent\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","Routes","Route","Navigate","AuthProvider","useAuth","Login","Register","Dashboard","Navbar","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","PublicRoute","_s2","_c2","AppContent","className","path","element","_c3","App","_c4","$RefreshReg$"],"sources":["C:/Users/erayd/Desktop/Yeni klasör/client/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport Navbar from './components/layout/Navbar';\r\nimport LoadingSpinner from './components/common/LoadingSpinner';\r\n\r\n// Protected Route bileşeni\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n  \r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n  \r\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\n// Public Route bileşeni (giriş yapmış kullanıcıları dashboard'a yönlendir)\r\nconst PublicRoute = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n  \r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n  \r\n  return isAuthenticated ? <Navigate to=\"/dashboard\" /> : children;\r\n};\r\n\r\n// Ana uygulama içeriği\r\nconst AppContent = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Routes>\r\n        {/* Public routes */}\r\n        <Route \r\n          path=\"/login\" \r\n          element={\r\n            <PublicRoute>\r\n              <Login />\r\n            </PublicRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/register\" \r\n          element={\r\n            <PublicRoute>\r\n              <Register />\r\n            </PublicRoute>\r\n          } \r\n        />\r\n        \r\n        {/* Protected routes */}\r\n        <Route \r\n          path=\"/dashboard/*\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <div>\r\n                <Navbar />\r\n                <Dashboard />\r\n              </div>\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        \r\n        {/* Default redirect */}\r\n        <Route path=\"/\" element={<Navigate to=\"/dashboard\" />} />\r\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Ana App bileşeni\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <AppContent />\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}